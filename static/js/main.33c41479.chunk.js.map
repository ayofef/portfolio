{"version":3,"sources":["components/title/title.js","components/terminal/text.js","components/terminal/terminal.js","components/projects/timeline.js","components/projects/projects.js","components/App.js","serviceWorker.js","index.js"],"names":["Title","className","style","color","href","target","rel","Text","useState","display","showText","setShowText","startDelay","speed","hideCursor","onFinishedTyping","Terminal","params","useSpring","marginTop","from","div","Timeline","contentStyle","background","contentArrowStyle","borderRight","iconStyle","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAwBeA,MArBf,WACI,OACI,6BACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WACf,gDAGJ,yBAAKA,UAAU,SACX,uBAAGC,MAAO,CAAEC,MAAO,YAAnB,oBAEI,6BAFJ,kFAGmF,uBAAGF,UAAU,OAAOG,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAAvE,aAC/E,6BAJJ,4BAK6B,uBAAGL,UAAU,OAAOG,KAAK,6BAAzB,SAL7B,iBAKyG,uBAAGH,UAAU,OAAOG,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAzF,YALzG,Q,8CCuBDC,MA7Bf,WAAgB,MAEiBC,mBAAS,CAACC,QAAS,SAFpC,mBAETC,EAFS,KAECC,EAFD,KAKZ,OACE,yBAAKV,UAAU,QACf,kBAAC,IAAD,CAAQW,WAAY,IAAMC,MAAO,GAAIC,WAAW,OAAOC,iBAJ9C,kBAAMJ,EAAY,CAACF,QAAS,YAIrC,qBAGA,yBAAKP,MAAOQ,GACV,2BACA,0BAAMT,UAAU,YAAhB,uBADA,kBAEE,6BACA,0BAAMA,UAAU,YAAhB,gBAHF,iDAIE,6BACA,0BAAMA,UAAU,YAAhB,gBALF,iCAME,6BACA,0BAAMA,UAAU,YAAhB,aAPF,sEAQE,6BACA,0BAAMA,UAAU,YAAhB,eATF,KASiD,uBAAGG,KAAK,6BAAR,SATjD,OASkG,uBAAGA,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAxE,YATlG,OASgN,uBAAGF,KAAK,4BAA4BC,OAAO,SAASC,IAAI,uBAAxD,UAThN,KAUE,6BACA,0BAAML,UAAU,UAAhB,YCDKe,MAtBf,WACE,IAAMC,EAASC,YAAU,CACvBC,UAAW,EAAGC,KAAM,CAACD,UAAW,OAGlC,OAAO,kBAAC,IAASE,IAAV,CAAcnB,MAAOe,GAC1B,6BACE,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,WAEjB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,W,qBCQOqB,MAtBjB,WACI,OACI,kBAAC,mBAAD,KACI,kBAAC,0BAAD,CACIrB,UAAU,kCACVsB,aAAc,CAAEC,WAAY,UAAWrB,MAAO,QAC9CsB,kBAAmB,CAAEC,YAAa,sBAClCC,UAAW,CAAEH,WAAY,UAAWrB,MAAO,SAE3C,wBAAIF,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,SAAhE,oBACA,wBAAIF,UAAU,qCAAqCC,MAAO,CAAEC,MAAO,YAAnE,gBACA,qEAGA,uBAAGC,KAAK,sCAAsCC,OAAO,SAASC,IAAI,uBAC9D,4BAAQL,UAAU,kBAAlB,mBCJH2B,MAXjB,WACI,OACI,6BACI,yBAAK3B,UAAU,SACX,8CAEJ,kBAAC,EAAD,Q,MCMG4B,MAVf,WACE,OACE,yBAAK5B,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.33c41479.chunk.js","sourcesContent":["import React from 'react';\r\nimport './title.scss'\r\n\r\nfunction Title() {\r\n    return( \r\n        <div>\r\n            <div className=\"banner\">\r\n                <div className=\"avatar\" />\r\n                <h1>Filip Ã…hfelt</h1>\r\n            </div>\r\n            \r\n            <div className=\"intro\">\r\n                <p style={{ color: '#434c5e' }}>\r\n                    Hello, I'm Filip.\r\n                    <br />\r\n                    I'm a M.Sc. Student at Faculty of Engineering LTH. Currently, IT Consultant at <a className=\"link\" href=\"http://www.lunicore.se/\" target=\"_blank\" rel=\"noopener noreferrer\">Lunicore.</a>\r\n                    <br />\r\n                    To keep in touch, simply <a className=\"link\" href=\"mailto:filahf94@gmail.com\">email</a> or add me on <a className=\"link\" href=\"https://www.linkedin.com/in/filip-ahfelt/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import Typing from 'react-typing-animation';\r\nimport './text.scss'\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction Text() {\r\n  //show result after the typing is done\r\n  var [showText, setShowText ] = useState({display: 'none'})\r\n  const hook = () => setShowText({display: 'block'})\r\n\r\n    return (\r\n      <div className=\"text\">\r\n      <Typing startDelay={1000} speed={80} hideCursor=\"true\" onFinishedTyping={hook} >\r\n      ./filip-ahfelt.sh\r\n      </Typing>\r\n      <div style={showText}>    \r\n        <p>\r\n        <span className=\"projects\">> Current location:</span> \"Lund, Sweden\"\r\n          <br/>\r\n          <span className=\"projects\">> Education:</span> \"M.Sc. Student at Faculty of Engineering LTH\"\r\n          <br/>\r\n          <span className=\"projects\">> Interests:</span> [\"Music\", \"Design\", \"Nature\"]\r\n          <br />\r\n          <span className=\"projects\">> Skills:</span> [\"JavaScript\", \"Python\", \"CSS\", \"React\", \"SQL\", \"GraphQL\", \"Node\"]\r\n          <br />\r\n          <span className=\"projects\">> Contact: </span>[\"<a href=\"mailto:filahf94@gmail.com\">Email</a>\", \"<a href=\"https://www.linkedin.com/in/filip-ahfelt/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\", \"<a href=\"https://github.com/filahf\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\"]\r\n          <br/>\r\n          <span className=\"cursor\">&nbsp;</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport './terminal.scss'\r\nimport {useSpring, animated} from 'react-spring'\r\nimport Text from './text';\r\n\r\nfunction Terminal() {\r\n  const params = useSpring({\r\n    marginTop: 0, from: {marginTop: 200}\r\n  })\r\n  \r\n  return <animated.div style={params}>\r\n    <div>\r\n      <div className=\"terminal-head\">\r\n        <div className=\"min\"></div>\r\n        <div className=\"max\"></div>\r\n        <div className=\"close\"></div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"text\">\r\n          <Text />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </animated.div>\r\n\r\n}\r\n\r\nexport default Terminal;","import React from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport './projects.scss'\r\n\r\nfunction Timeline() {\r\n    return (\r\n        <VerticalTimeline>\r\n            <VerticalTimelineElement\r\n                className=\"vertical-timeline-element--work\"\r\n                contentStyle={{ background: '#434c5e', color: '#fff' }}\r\n                contentArrowStyle={{ borderRight: '7px solid  #81a1c1' }}\r\n                iconStyle={{ background: '#a3be8c', color: '#fff' }}\r\n            >\r\n                <h3 className=\"vertical-timeline-element-title\" style={{ color: '#fff' }}>Personal Website</h3>\r\n                <h4 className=\"vertical-timeline-element-subtitle\" style={{ color: '#81a1c1' }}>React, Sass </h4>\r\n                <p>\r\n                The website you're currently browsing!\r\n                </p>\r\n                <a href=\"https://github.com/filahf/portfolio\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <button className=\"button button1\">View Source</button>\r\n                </a>\r\n            </VerticalTimelineElement>\r\n        </VerticalTimeline>\r\n    );\r\n  }\r\n  \r\n  export default Timeline;","import React from 'react';\r\nimport './projects.scss'\r\nimport Timeline from './timeline'\r\n\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <div className=\"title\">\r\n                <h2>Side Projects</h2>\r\n            </div>\r\n            <Timeline />\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Projects;","import React from 'react';\r\nimport Title from './title/title'\r\nimport Terminal from './terminal/terminal'\r\nimport Projects from './projects/projects'\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n        <Title />\r\n        <Terminal />\r\n        <Projects />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}